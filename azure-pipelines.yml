# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main


stages:
  - stage: Build_Test
    pool:
      vmImage: ubuntu-latest
    jobs:
      - job: build
        steps:
          - script: echo Hello, world!
            displayName: 'Run a one-line script'
          - script: |
              echo Add other tasks to build, test, and deploy your project.
              echo See https://aka.ms/yaml
            displayName: 'Run a multi-line script'
          - script: pwd
          - script: find ./
          #- script: ./gradlew sonarqube -Dsonar.projectKey=hello-azure
          - task: SentrioDeploy@0
            inputs:
              SentrioService: 'sentrio-platform'
              projectId: 'PI'
              application: 'azure-app2'
              environment: 'dev'
              commitMessage: '$(Build.SourceVersionMessage)'
          - task: SonarQubePrepare@4
            inputs:
              SonarQube: 'sonarqube-profile'
              scannerMode: 'Other'
              extraProperties: |
                # Additional properties that will be passed to the scanner,
                # Put one key=value per line, example:
                # sonar.exclusions=**/*.bin
                sonar.projectKey=hello-azure
          - task: Gradle@2
            inputs:
              gradleWrapperFile: 'gradlew'
              tasks: 'build -x test'
              publishJUnitResults: false
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              sonarQubeRunAnalysis: true
              sqGradlePluginVersionChoice: 'specify'
              sonarQubeGradlePluginVersion: '3.0'
          - task: SonarQubePublish@4
            inputs:
              pollingTimeoutSec: '300'
          - task: SentrioSonarqube@1
            inputs:
              SentrioService: 'sentrio-platform'
              sonarqubeBaseUrl: 'https://sonarqube.profile.es'
              projectId: 'PI'
              application: 'hello-azure'
              branch: 'master'              
          - task: CopyFiles@2
            inputs:
              contents: 'build/**/*.jar'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              ArtifactName: 'drop'
              publishLocation: 'Container'